{"version":3,"sources":["history.js","reducers/state.js","reducers/index.js","components/Header.js","config.js","actions/state.js","store/configureStore.js","components/ListPageView.js","components/PeopleView.js","components/Paginator.js","components/TvView.js","components/MoviesView.js","components/DiscoverView.js","components/Main.js","components/Footer.js","components/App.js","serviceWorker.js","index.js","img/logo.svg"],"names":["history","createBrowserHistory","initialState","json","urlParams","page","urlPathNow","location","pathname","combineReducers","state","arguments","length","undefined","action","newState","Object","objectSpread","type","payload","Header","react_default","a","createElement","Navbar","bg","expand","react_router_dom","to","className","Image","src","logo","style","maxWidth","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","Item","href","Divider","Form","inline","FormControl","placeholder","Button","variant","Container","fluid","Row","Col","md","padding","borderTop","borderLeft","borderRight","link","token","config","urlGetList","concat","urlPopularPeople","utlPapularTv","utlPapularMovies","urlDiscover","imgLink","jsonToState","data","pageChange","dispatch","pageToState","fetchData","useState","url","URL","keys","forEach","param","searchParams","set","fetch","then","response","CardMy","_ref","poster_path","name","overview","Card","Img","Body","Title","Text","substr","ListPageView","_ref2","results","map","item","i","key","ListPageView_CardMy","profile_path","known_for","original_title","original_name","join","PeopleView","PeopleView_CardMy","Paginator","totalPages","handlePageChange","value","onClick","disabled","TvView","TvView_CardMy","MoviesView","MoviesView_CardMy","DiscoverView","DiscoverView_CardMy","connect","total_pages","path","e","target","props","useEffect","react_router","exact","render","Footer","store","createStore","rootReducer","applyMiddleware","thunk","listen","getState","Boolean","window","hostname","match","ReactDOM","es","Main","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8a4f565b.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;","import history from '../history';\n\nconst initialState = {\n  json:{},\n  urlParams: {\n    page:1,\n  },\n  urlPathNow: history.location.pathname\n}\n\nexport function state(state = initialState, action) {\n  let newState = {...state};\n  switch (action.type) {\n    case 'FETCH_TO_STATE':\n      newState.json = action.payload;\n      return newState;\n    case 'HISTORY_UPDATE':\n      newState.urlPathNow = action.payload;\n      return newState;\n    case 'PAGE_CHANGE':\n      newState.urlParams.page = action.payload;\n      return newState;\n\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport { state } from './state';\n\nexport default combineReducers({\n    state,\n});","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { Button, Navbar, Nav, NavDropdown, Form, FormControl, Image, Container, Row, Col }  from 'react-bootstrap'\nimport logo from '../img/logo.svg'\n\nexport default () =>\n<div>\n<Navbar bg=\"light\" expand=\"lg\">\n  <Link to='/' className='nav nav-link nav-brand'><Image src={logo} style={{maxWidth:250}}/></Link>\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  <Navbar.Collapse id=\"basic-navbar-nav\">\n    <Nav className=\"mr-auto\">\n      <Link to='/discover' className='nav nav-link'>DISCOVER</Link>\n      <Link to='/movies' className='nav nav-link'>MOVIES</Link>\n      <Link to='/tv' className='nav nav-link'>TV SHOWS</Link>\n      <Link to='/people' className='nav nav-link'>PEOPLE</Link>\n      <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n        <NavDropdown.Divider />\n        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n      </NavDropdown>\n    </Nav>\n    <Form inline>\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n      <Button variant=\"outline-success\">Search</Button>\n    </Form>\n  </Navbar.Collapse>\n</Navbar>\n<Container fluid>\n    <Row>\n      <Col md='12'>\n        <Form >\n          <FormControl style={{padding:'0 15vw',borderTop:'none',borderLeft:'none',borderRight:'none'}}type=\"text\" placeholder=\"Search a movie, tv-show or person...\" className=\"mr-sm-12\" />\n        </Form>\n      </Col>\n    </Row>\n</Container>\n</div>\n","let link = \"https://api.themoviedb.org/\";\nlet token = `?api_key=5874acfd11651a28c55771624f7021f4`;\nexport const config = {\n  urlGetList: `${link}3/trending/all/day${token}`,\n  urlPopularPeople:`${link}3/person/popular${token}`,\n  utlPapularTv:`${link}3/tv/popular${token}`,\n  utlPapularMovies:`${link}3/movie/popular${token}`,\n  urlDiscover:`${link}3/discover/movie${token}&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&year=2018`,\n  imgLink:'https://image.tmdb.org/t/p/w500',\n};\n\n","import { config } from '../config';\n\nexport function jsonToState(data) {\n  return {\n    type: \"FETCH_TO_STATE\",\n    payload: data,\n  };\n}\n\nexport function pageToState(page) {\n  return {\n    type: \"PAGE_CHANGE\",\n    payload: page,\n  };\n}\n\nexport function pageChange(page) {\n  return (dispatch) => {\n    dispatch(pageToState(page));\n    dispatch(fetchData());\n  }\n};\n\nexport function fetchData() {\n  return (dispatch, useState) => {\n    let link;\n    switch(useState().state.urlPathNow) {\n      case '/people':\n        link = config.urlPopularPeople;\n        break;\n      case '/tv':\n        link = config.utlPapularTv;\n        break;\n      case '/movies':\n        link = config.utlPapularMovies;\n        break;\n      case '/discover':\n        link = config.urlDiscover;\n        break;\n      default:\n        link = config.urlGetList;\n        break;\n    }\n    let url = new URL(link);\n    let urlParams = useState().state.urlParams;\n    Object.keys(urlParams).forEach(           //setting params to url\n      param => url.searchParams.set(param, urlParams[param])\n      )\n\n    fetch(url)\n      .then(response=>response.json())\n      .then(json=> {\n        // console.log(json);\n        return dispatch(jsonToState(json));\n      })      \n  };\n};\n\nexport const handlePageChange = e =>{\n  return(dispatch, useState)=>{\n    let page = useState().state.json.page;\n    switch(e.target.value){\n      case 'prev':\n        return dispatch(pageChange(page-1));\n      case 'next':\n        return dispatch(pageChange(page+1));\n      default:\n        return dispatch(pageChange(page+e.target.value));\n    }\n  }\n};","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nexport default function configureStore(initialState) {\n  return createStore(\n    rootReducer,\n    initialState,\n    process.env.NODE_ENV==='development'? (\n    compose(    // add redux-dev-tools. If not instaled on chrome, throw error\n      applyMiddleware(thunk),\n      composeWithDevTools()\n    )) :\n    (applyMiddleware(thunk))\n  );\n}","import React from 'react';\nimport { Container, Row, Col, Card }  from 'react-bootstrap'\nimport { config } from '../config';\n\nconst CardMy = ({poster_path, name, overview}) =>\n  <Card >\n    <Card.Img variant=\"top\" src={config.imgLink+poster_path}/>\n    <Card.Body>\n      <Card.Title>{name}</Card.Title>\n      <Card.Text>\n        {overview.substr(0, 60)}...\n      </Card.Text>\n    </Card.Body>\n  </Card>\n\nexport default ({results})=>{\n  return <Container className='main mt-3'>\n    <Row>\n      <Col>\n        <h1 className='main m-4'>Discover New Movies & TV Shows Movies TV Shows</h1>\n      </Col>\n    </Row>\n\n    <Row className='justify-content-center'>\n      { results && \n        results.map((item,i)=>\n        <Col className='col-md-3 mb-3' key={i}>\n          <CardMy {...item}/>\n        </Col>)\n      }\n    </Row>\n  </Container>\n}","import React from 'react';\nimport { Container, Row, Col, Card }  from 'react-bootstrap'\nimport { config } from '../config';\n\n\nconst CardMy = ({profile_path, name, known_for}) =>\n  <Card >\n    <Card.Img variant=\"top\" src={config.imgLink+profile_path}/>\n    <Card.Body>\n      <Card.Title>{name}</Card.Title>\n      <Card.Text>\n        {known_for.map(item=>item.original_title || item.original_name).join(', ').substr(0, 40)}...\n      </Card.Text>\n    </Card.Body>\n  </Card>\n\nexport default ({results})=>{\n\n  return <Container className='main mt-3'>\n    <Row>\n      <Col>\n        <h1 className='main m-4'>Popular People</h1>\n      </Col>\n    </Row>\n\n    <Row className='justify-content-center'>\n      { results && \n        results.map((item,i)=>\n        <Col className='col-md-3 mb-3' key={i}>\n          <CardMy {...item}/>\n          \n        </Col>)\n      }\n    </Row>\n  </Container>\n}","import React from 'react';\nimport { Container, Button, Row, Col }  from 'react-bootstrap'\n\n\nexport default ({page, totalPages, handlePageChange})=>\n<Container className='text-center'>\n  <Row>\n    <Col>\n\n      { \n        page > 1 && \n        <Button variant=\"outline-primary\" value='prev' onClick={handlePageChange}>\n          {'<-Prev'}\n        </Button>\n\n      }\n      {page && \n      <Button variant=\"outline-primary\" disabled>\n          {page}\n        </Button>\n      }\n      { \n        page < totalPages && \n        <Button variant=\"outline-primary\" value='next' onClick={handlePageChange}>\n          {'Next->'}\n        </Button>\n      }\n    </Col>\n  </Row>\n</Container>","import React from 'react';\nimport { Container, Row, Col, Card }  from 'react-bootstrap'\nimport { config } from '../config';\n\n\nconst CardMy = ({poster_path, name, overview}) =>\n  <Card >\n    <Card.Img variant=\"top\" src={config.imgLink+poster_path}/>\n    <Card.Body>\n      <Card.Title>{name}</Card.Title>\n      <Card.Text>\n        {overview.substr(0, 60)}...\n      </Card.Text>\n    </Card.Body>\n  </Card>\n\nexport default ({results})=>{\n  return <Container className='main mt-3'>\n    <Row>\n      <Col>\n        <h1 className='main m-4'>Popular TV Shows</h1>\n      </Col>\n    </Row>\n\n    <Row className='justify-content-center'>\n      { results && \n        results.map((item,i)=>\n        <Col className='col-md-3 mb-3' key={i}>\n          <CardMy {...item}/>\n        </Col>)\n      }\n    </Row>\n  </Container>\n}\n\n","import React from 'react';\nimport { Container, Row, Col, Card }  from 'react-bootstrap'\nimport { config } from '../config';\n\n\nconst CardMy = ({poster_path, name, overview}) =>\n  <Card >\n    <Card.Img variant=\"top\" src={config.imgLink+poster_path}/>\n    <Card.Body>\n      <Card.Title>{name}</Card.Title>\n      <Card.Text>\n        {overview.substr(0, 60)}...\n      </Card.Text>\n    </Card.Body>\n  </Card>\n\nexport default ({results})=>{\n  return <Container className='main mt-3'>\n    <Row>\n      <Col>\n        <h1 className='main m-4'>Popular TV Shows</h1>\n      </Col>\n    </Row>\n\n    <Row className='justify-content-center'>\n      { results && \n        results.map((item,i)=>\n        <Col className='col-md-3 mb-3' key={i}>\n          <CardMy {...item}/>\n        </Col>)\n      }\n    </Row>\n  </Container>\n}\n\n","import React from 'react';\nimport { Container, Row, Col, Card }  from 'react-bootstrap'\nimport { config } from '../config';\n\n\nconst CardMy = ({poster_path, name, overview}) =>\n  <Card >\n    <Card.Img variant=\"top\" src={config.imgLink+poster_path}/>\n    <Card.Body>\n      <Card.Title>{name}</Card.Title>\n      <Card.Text>\n        {overview.substr(0, 60)}...\n      </Card.Text>\n    </Card.Body>\n  </Card>\n\nexport default ({results})=>{\n  return <Container className='main mt-3'>\n    <Row>\n      <Col>\n        <h1 className='main m-4'>Discover New Movies & TV Shows Movies TV Shows</h1>\n      </Col>\n    </Row>\n\n    <Row className='justify-content-center'>\n      { results && \n        results.map((item,i)=>\n        <Col className='col-md-3 mb-3' key={i}>\n          <CardMy {...item}/>\n        </Col>)\n      }\n    </Row>\n  </Container>\n}","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchData, pageChange, handlePageChange, jsonToState } from '../actions/state';\nimport ListPageView from './ListPageView';\nimport PeopleView from './PeopleView';\nimport Paginator from './Paginator';\nimport TvView from './TvView';\nimport MoviesView from './MoviesView';\nimport DiscoverView from './DiscoverView';\nimport { Route, Switch } from \"react-router-dom\";\n\nconst ListPage = (props)=>{\n  \n  useEffect(()=>{\n    props.fetchData(); // fetch initial\n  }\n  ,[props.urlPathNow]);\n\n  return (\n    <div>\n      <Switch>\n        <Route exact path='/' render={()=><ListPageView {...props} />} />\n        <Route exact path='/people' render={()=><PeopleView {...props}/>} />\n        <Route exact path='/tv' render={()=><TvView {...props}/>} />\n        <Route exact path='/movies' render={()=><MoviesView {...props}/>} />\n        <Route exact path='/discover' render={()=><DiscoverView {...props}/>} />\n      </Switch>\n      <Paginator {...props}/>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    results: state.state.json.results,\n    json: state.state.json,\n    page: state.state.json.page,\n    totalPages: state.state.json.total_pages,\n    urlPathNow: state.state.urlPathNow,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    pageChange: (page) => dispatch(pageChange(page)),\n    fetchData: (path) => dispatch(fetchData(path)),\n    handlePageChange: (e) => dispatch(handlePageChange(e)),\n    jsonToState: (data) => dispatch(jsonToState(data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPage);","import React from 'react';\n\nexport default () =>\n  <footer className='footer'>\n    <div>Denis Savisko, <a href='https://github.com/DenisSavisko' target='blank'>GitHub</a></div>\n  </footer>","import React from 'react';\nimport { Provider } from 'react-redux';\nimport configureStore from '../store/configureStore';\nimport { Router } from \"react-router-dom\";\nimport history from '../history';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\nconst store = configureStore(); // You can also pass in an initialState here\n\nhistory.listen(({pathname}) => { // location to redux;\n  if(store.getState().state.urlPathNow !== pathname){\n    store.dispatch({type:'PAGE_CHANGE', payload:1}); // remove state.json only when path changed\n    store.dispatch({type:'FETCH_TO_STATE', payload:{}}); // remove state.json only when path changed\n    store.dispatch({type:'HISTORY_UPDATE', payload:pathname});\n  }\n});\n\nexport default () =>\n  <Provider store={store}>\n    <Router history={history}>\n      <Header />\n      <Main />\n      <Footer />\n    </Router>\n  </Provider>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.78a64a09.svg\";"],"sourceRoot":""}